# main.py
from manager import Manager
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –∏–∑ –ø–∞–∫–µ—Ç–∞ classes
from classes import *

def main():
    manager = Manager()

    print("--- 1. –û–ø–µ—Ä–∞—Ü–∏—è CREATE ---")
    try:
        user1 = User(1, "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", "ivan.p@example.com")
        user2 = User(2, "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞", "anna.s@example.com")
        address1 = Address(city="–ú–æ—Å–∫–≤–∞", street="–¢–≤–µ—Ä—Å–∫–∞—è", building_number="10", postal_code=125009)
        house1 = Housing(101, address1, 5500, "–£—é—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ")
        booking1 = Booking(1, user1, house1, "2024-01-10", "2024-01-15")
        review1 = Review(1001, user1, house1, 5, "–í—Å–µ –±—ã–ª–æ –æ—Ç–ª–∏—á–Ω–æ!")

        manager.add_user(user1)
        manager.add_user(user2)
        manager.add_housing(house1)
        manager.add_booking(booking1)
        manager.add_review(review1)
        print("‚úÖ –û–±—ä–µ–∫—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã.")
        
    except (AddressDataError, UserDataError, HousingDataError, InvalidRatingError) as e:
        print(f"üî• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤: {e}")

    print(f"\n--- 2. –û–ø–µ—Ä–∞—Ü–∏—è READ ---")
    retrieved_user = manager.get_user_by_id(1)
    print(f"–ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {retrieved_user}")
    
    print(f"\n--- 3. –û–ø–µ—Ä–∞—Ü–∏—è UPDATE ---")
    user_to_update_id = 1
    print(f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID={user_to_update_id}) –¥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {manager.get_user_by_id(user_to_update_id).name}")
    
    update_data = {'name': "–ò–≤–∞–Ω '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π' –ü–µ—Ç—Ä–æ–≤", 'contact_info': 'ivan.new@example.com'}
    if manager.update_user(user_to_update_id, update_data):
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω.")
        updated_user = manager.get_user_by_id(user_to_update_id)
        print(f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {updated_user.name}")
        print(f"–ù–æ–≤—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã: {updated_user.contact_info}")
    else:
        print(f"üî• –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID={user_to_update_id} –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")

    print("\n--- 4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ JSON ---")
    manager.save_to_json('data.json')
    print("üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ data.json")
    
    manager_from_json = Manager()
    manager_from_json.load_from_json('data.json')
    print("üìÇ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ data.json")
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞: –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(manager_from_json.bookings)} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.")
    
    print("\n--- 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ XML ---")
    manager.save_to_xml('data.xml')
    print("üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ data.xml")

    manager_from_xml = Manager()
    manager_from_xml.load_from_xml('data.xml')
    print("üìÇ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ data.xml")
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞: –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(manager_from_xml.reviews)} –æ—Ç–∑—ã–≤–æ–≤.")
    if manager_from_xml.reviews:
        print(f"–ü–µ—Ä–≤—ã–π –æ—Ç–∑—ã–≤ –∏–∑ XML: '{manager_from_xml.reviews[0].comment}'")

    print("\n--- 6. –û–ø–µ—Ä–∞—Ü–∏—è DELETE ---")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ —É–¥–∞–ª–µ–Ω–∏—è: {len(manager.users)}")
    user_to_delete_id = 2
    if manager.delete_user_by_id(user_to_delete_id):
        print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID={user_to_delete_id} —É–¥–∞–ª–µ–Ω.")
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è: {len(manager.users)}")

if __name__ == '__main__':
    main()